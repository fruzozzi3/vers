// lib/features/achievements/models/achievement.dart
enum AchievementType {
  firstDeposit,
  reach1000,
  reach5000,
  reach10000,
  reach50000,
  reach100000,
  streak7days,
  streak30days,
  completedGoal,
  bigSaver, // –∑–∞ –æ–¥–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–æ–ª—å—à–µ 5000
  consistent, // –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏
}

class Achievement {
  final AchievementType type;
  final String title;
  final String description;
  final String icon;
  final bool isUnlocked;
  final DateTime? unlockedAt;
  final int progress;
  final int maxProgress;

  Achievement({
    required this.type,
    required this.title,
    required this.description,
    required this.icon,
    this.isUnlocked = false,
    this.unlockedAt,
    this.progress = 0,
    this.maxProgress = 1,
  });

  Achievement copyWith({
    bool? isUnlocked,
    DateTime? unlockedAt,
    int? progress,
  }) {
    return Achievement(
      type: type,
      title: title,
      description: description,
      icon: icon,
      isUnlocked: isUnlocked ?? this.isUnlocked,
      unlockedAt: unlockedAt ?? this.unlockedAt,
      progress: progress ?? this.progress,
      maxProgress: maxProgress,
    );
  }

  double get progressPercent => maxProgress > 0 ? progress / maxProgress : 0.0;

  static List<Achievement> getAllAchievements() {
    return [
      Achievement(
        type: AchievementType.firstDeposit,
        title: '–ü–µ—Ä–≤—ã–µ –¥–µ–Ω—å–≥–∏',
        description: '–°–¥–µ–ª–∞–π –ø–µ—Ä–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ',
        icon: 'üí∞',
      ),
      Achievement(
        type: AchievementType.reach1000,
        title: '–ü–µ—Ä–≤–∞—è —Ç—ã—Å—è—á–∞',
        description: '–ù–∞–∫–æ–ø–∏ 1 000 ‚ÇΩ',
        icon: 'üéØ',
        maxProgress: 1000,
      ),
      Achievement(
        type: AchievementType.reach5000,
        title: '–°–µ—Ä—å–µ–∑–Ω—ã–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è',
        description: '–ù–∞–∫–æ–ø–∏ 5 000 ‚ÇΩ',
        icon: 'üíé',
        maxProgress: 5000,
      ),
      Achievement(
        type: AchievementType.reach10000,
        title: '–î–µ—Å—è—Ç–∫–∞',
        description: '–ù–∞–∫–æ–ø–∏ 10 000 ‚ÇΩ',
        icon: 'üëë',
        maxProgress: 10000,
      ),
      Achievement(
        type: AchievementType.reach50000,
        title: '–°–æ–ª–∏–¥–Ω–∞—è —Å—É–º–º–∞',
        description: '–ù–∞–∫–æ–ø–∏ 50 000 ‚ÇΩ',
        icon: 'üèÜ',
        maxProgress: 50000,
      ),
      Achievement(
        type: AchievementType.reach100000,
        title: '–°—Ç–æ —Ç—ã—Å—è—á!',
        description: '–ù–∞–∫–æ–ø–∏ 100 000 ‚ÇΩ',
        icon: 'üöÄ',
        maxProgress: 100000,
      ),
      Achievement(
        type: AchievementType.streak7days,
        title: '–ù–µ–¥–µ–ª—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã',
        description: '–ü–æ–ø–æ–ª–Ω—è–π –∫–æ–ø–∏–ª–∫—É 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
        icon: 'üî•',
        maxProgress: 7,
      ),
      Achievement(
        type: AchievementType.streak30days,
        title: '–ú–µ—Å—è—Ü –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–∞',
        description: '–ü–æ–ø–æ–ª–Ω—è–π –∫–æ–ø–∏–ª–∫—É 30 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
        icon: '‚ö°',
        maxProgress: 30,
      ),
      Achievement(
        type: AchievementType.completedGoal,
        title: '–¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞',
        description: '–í—ã–ø–æ–ª–Ω–∏ —Å–≤–æ—é –ø–µ—Ä–≤—É—é —Ü–µ–ª—å',
        icon: '‚úÖ',
      ),
      Achievement(
        type: AchievementType.bigSaver,
        title: '–ë–æ–ª—å—à–∏–µ –≤–∫–ª–∞–¥—ã',
        description: '–ü–æ–ø–æ–ª–Ω–∏ –∫–æ–ø–∏–ª–∫—É –Ω–∞ 5 000 ‚ÇΩ –∑–∞ —Ä–∞–∑',
        icon: 'üí™',
        maxProgress: 5000,
      ),
    ];
  }
}
